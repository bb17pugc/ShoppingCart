@model ShoppingCart.Models.ProductsPagesAdminViewModel

@{
    ViewBag.Title = "Products";
}

<label>
    @Html.ActionLink("Create New", "Create")
</label>
@{ 
    var ImageSrc = "";
}
<table id="myTable" class="table">
    <thead>
        <tr>
            <th class="Text-Center">
                Photo
            </th>
            <th class="Text-Center">
                ID
            </th>
             <th class="Text-Center">
                 Name
             </th>
             <th class="Text-Center">
                 Description
             </th>
             <th class="Text-Center">
                 Price
             </th>
             <th class="Text-Center">
                 Catagory
             </th>
         <th class="Text-Center">
             Sale
        </th>
           
            <th style="text-align:right">
                        Total:
            </th>
            <th style="text-align:left">
                        @ViewBag.TotalProducts
            </th>

     <tr>
</thead>
    <tbody class="Text-Center">
        @foreach (var item in Model.ProductList)
        {
            <tr>
                <td>
                    @if (item.ProductPhoto == null)
                    {
                        ImageSrc = "~/Images/Product.jpg";
                    }
                    else
                    {
                        var base64 = Convert.ToBase64String(item.ProductPhoto);
                         ImageSrc = string.Format("data:image/jpg;base64,{0}", base64);
                    }
                    <img src="@ImageSrc" class="circle-image" width="40" height="40" />
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="TextAreaDisplay">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Catagory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductSaleCount)
                    @Html.ActionLink("details", "ProductSaleDetail", "Admin", new { ProductId = item.ID }, htmlAttributes: new { @class = "Label-Small" })
                </td>
                <td>
                    <a href="@Url.Action("UserProfile", "Profile", new {ProductId = item.ID })" title="See details">
                        <i class="fa fa-info Label-User"></i>
                    </a>
                    |
                    <a href="@Url.Action("Delete", "AddProducts" ,new {id = item.ID })" title="Remove product" style="color:gray">
                        <i class="fa fa-trash Label-Trash"></i>
                    </a>
                    |
                    <a href="@Url.Action("Create", "AddProducts", new {ProductId = item.ID })" title="Edit product">
                        <i class="fa fa-edit Label-User"></i>
                    </a>
                </td>
            </tr>
            <tr>
                <td colspan="10"></td>
            </tr>
        }
    </tbody>
</table>
<table style="position:fixed;bottom:7%">
    <tr style="border:none">
        <td style="text-align:right">
            @if ((Model.Pages.CurrentPage > 1))
            {
                @Html.RouteLink("Previous", new
                     {
                         controller = "AddProducts",
                         action = "Index",
                         CurrentPage = Model.Pages.CurrentPage - 1,
                     }, new { @class = "btn btn-sm btn-primary" }
                           )
            }


        </td>
        <td style="text-align:left">

            @if ((Model.Pages.CurrentPage < Model.Pages.TotalPages))
            {
                @Html.RouteLink("Next", new
                     {
                         controller = "AddProducts",
                         action = "Index",
                         Currentpage = Model.Pages.CurrentPage + 1,

                     }, new { @class = "btn btn-sm btn-primary" }
                              )
            }

            @if (Model.Pages.TotalPages > 0)
            {
                <label class="label label-default">@Model.Pages.CurrentPage of  @Model.Pages.TotalPages </label>
            }


        </td>
    </tr>
</table>



