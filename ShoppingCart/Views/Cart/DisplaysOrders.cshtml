@model ShoppingCart.Models.OrdersPagesViewmodel

@{
    ViewBag.Title = "Orders";
}

 <label class="label pull-right" style="font-size:medium;font-weight:100;background-color:gray;border-radius:20px">Orders : @Model.OrdersData.Count()</label>
 <label class="label pull-right" style="font-size:medium;font-weight:100;background-color:gray;border-radius:20px">Total amount : @Model.OrdersData.Sum(x => x.TotalPurchase).ToString("c")</label>
<table class="table well">
    <tr style="background-color:dodgerblue;color:white;border:solid;border-radius:30px">
        <th style="text-align:center">
            Order ID
        </th>
        <th style="text-align:center">
            Submitted
        </th>
        <th style="text-align:center">
            Amount
        </th>
        <th style="text-align:center">
            Products
        </th>
        <th style="text-align:center">
        </th>
        <th>
         
        </th>
    </tr>
@foreach (var item in Model.OrdersData) {
    <tr>
        <td style="text-align:center">
            @Html.DisplayFor(modelItem => item.OrderId)
        </td>
        <td style="text-align:center">
            @Html.DisplayFor(modelItem => item.CurrentDate)
        </td>
        <td style="text-align:center">
            @Html.DisplayFor(modelItem => item.TotalPurchase)
        </td>
        <td style="text-align:center">
            @Html.DisplayFor(modelItem => item.ProductsCount)
        </td>
        <td>
               @Html.ActionLink("Details", "DisplaysOrdersDetail", new { id = item.OrderId }, htmlAttributes: new { @class = "btn btn-sm btn-info linkbtn" })
               @Html.RouteLink("Remove", new
           {
               controller = "Cart",
               action = "DisplaysOrdersDetail",
               DeleteOrderId = item.ID,
               id = item.OrderId,

           }, new { @class = "btn btn-sm btn-danger" }
            )
        </td>
    </tr>
}

</table>
@if ((Model.PagesData.CurrentPage > 1))
{
    <button class="btn btn-default btn-sm">
        @Html.RouteLink("Previous", new
   {
       controller = "Cart",
       action = "DisplaysOrders",
       CurrenPage = Model.PagesData.CurrentPage - 1,
   }, new { @class = "btn btn-sm" }
            )
    </button>
}
@if ((Model.PagesData.CurrentPage < Model.PagesData.TotalPages))
{
    <button class="btn btn-default btn-sm">
        @Html.RouteLink("Next", new
   {
       controller = "Cart",
       action = "DisplaysOrders",
       Currentpage = Model.PagesData.CurrentPage + 1,

   }, new { @class = "btn btn-sm" }
            )
    </button>
}
<br />
@if (Model.PagesData.TotalPages > 0)
{
    <label class="label label-default">@Model.PagesData.CurrentPage of  @Model.PagesData.TotalPages </label>
}
<style>
    .linkbtn {
        color:white
    }
   .linkbtn:hover {
        color:white
    }
</style>